//Условие:1.Даны  два неубывающих массива X=(xi),i=1..n, n<=10,  и Y=(yi),i=1..m, m<=10. Найти количество общих элементов в этих массивах 
// (т. е. количество тех целых t, для которых  t = xi = yj  для некоторых i и j). (Число действий порядка m+n.)
/*
Примеры:
Введите n:9
Введите m:9
Заполнить массивы случайными числами(ввести 0) или хотите вводить(ввести 1):0
массив Х:3      4       5       4       3       1       5       5       2
массив Y:5      3       4       2       2       1       2       5       3
Отсортированный на ассемблере первый массив:1   2       3       3       4       4       5       5       5
Отсортированный на ассемблере второй массив:1   2       2       2       3       3       4       5       5
t=16
Количество одинаковых элементов:7


Введите n:7
Введите m:9
Заполнить массивы случайными числами(ввести 0) или хотите вводить(ввести 1):0
массив Х:2      4       2       5       1       5       4
массив Y:4      3       5       2       3       1       3       2       3
Отсортированный на ассемблере первый массив:1   2       2       4       4       5       5
Отсортированный на ассемблере второй массив:1   2       2       3       3       3       3       4       5
t=9
Количество одинаковых элементов:5


Введите n:99
n>10,введите ещё раз:8
Введите m:321
m>10,введите ещё раз:7
Заполнить массивы случайными числами(ввести 0) или хотите вводить(ввести 1):1
массив Х:7
3
6
4
1
5
7
6

массив Y:9
8
7
2
5
4
3

Отсортированный на ассемблере первый массив:1   3       4       5       6       6       7       7
Отсортированный на ассемблере второй массив:2   3       4       5       7       8       9
t=5
Количество одинаковых элементов:4
*/
#include <iostream>
#include <random>
#include <ctime>
using namespace std;
extern "C" void _cdecl sortmassiv(int, int*);
extern "C" int _cdecl printing();
extern "C" int _cdecl searching(int,int);
extern "C" int _cdecl sameelements(int);
extern "C" int _cdecl sameelements2(int);
extern "C" int _cdecl numofelements(int,int);
void main()
{
	setlocale(LC_ALL, "rus");
	srand(static_cast<int>(time(0)));
	int n;
	int m;
	cout << "Введите n:";
	cin >> n;
	while (n > 10)
	{
		cout << "n>10,введите ещё раз:";
		cin >> n;
	}
	cout << "Введите m:";
	cin >> m;
	while (m > 10)
	{
		cout << "m>10,введите ещё раз:";
		cin >> m;
	}
	int* X = new int[n] {};
	int* Y = new int[m] {};
	int a;
	cout << "Заполнить массивы случайными числами(ввести 0) или хотите вводить(ввести 1):";
	cin >> a;
	while (a != 1 && a != 0)
	{
		cout << "Неправильный ввод.Введите 0 или 1:";
		cin >> a;
	}
	if (a == 0)
	{
		cout << "массив Х:";
		for (int i = 0; i < n; ++i)
		{
			X[i] = rand() % 5 + 1;
		}
		for (int i = 0; i < n; ++i)
		{
			cout << X[i] << "\t";
		}
	}
	else if (a == 1)
	{
		cout << "массив Х:";
		for (int i = 0; i < n; ++i)
		{
			cin >> X[i];
		}
	}
	cout << '\n';
	if (a == 0)
	{
		cout << "массив Y:";
		for (int i = 0; i < m; ++i)
		{
			Y[i] = rand() % 5 + 1;
		}
		for (int i = 0; i < m; ++i)
		{
			cout << Y[i] << "\t";
		}
	}
	else if (a == 1)
	{
		cout << "массив Y:";
		for (int i = 0; i < m; ++i)
		{
			cin >> Y[i];
		}
	}
	cout << '\n';
	sortmassiv(n, X);
	cout << "Отсортированный на ассемблере первый массив:";
	for (int i{}; i < n; ++i)
	{
		cout << printing() << '\t';
	}
	cout << '\n';
	sortmassiv(m, Y);
	cout << "Отсортированный на ассемблере второй массив:";
	for (int i{}; i < m; ++i)
	{
		cout << printing() << '\t';
	}
	cout << '\n' << "t=" << searching(n, m) << '\n';
	sameelements(n);
	sameelements2(m);
	cout << "Количество одинаковых элементов:" << numofelements(n,m);
}